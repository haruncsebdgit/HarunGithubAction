name: CI/CD

on:
  push:
    branches: ['master', 'main']
  pull_request:
    branches: ['master', 'main']
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  FILENAME: "deploy"

jobs:
  CI:
    name: 🔍 Run Tests & Build
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 📦 Install dependencies
        run: npm install

      - name: ✅ Run tests
        run: npm test

      - name: 🛠️ Build app
        run: npm run build

      - name: 📦 Archive build
        run: tar -czf ${{ env.FILENAME }}.tar.gz ./build

      - name: ⬆️ Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: ${{ env.FILENAME }}.tar.gz

  CD:
    name: 🚀 Deploy to AWS
    runs-on: ubuntu-latest
    needs: [CI]

    steps:
      - name: ⬇️ Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: 🔍 Debug SSH secrets (length check only)
        run: |
          echo "Host: ${{ secrets.SSH_HOST }}"
          echo "User: ${{ secrets.SSH_USER }}"
          echo "Port: ${{ secrets.SSH_PORT }}"
          echo "Key length: ${#SSH_KEY}"
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}

      - name: 📤 Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ${{ env.FILENAME }}.tar.gz
          target: "/tmp"

      - name: 🖥️ Execute remote SSH commands
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo tar -xzf /tmp/${{ env.FILENAME }}.tar.gz -C /var/www/mywebsite/
            sudo rm /tmp/${{ env.FILENAME }}.tar.gz
            sudo systemctl restart nginx
