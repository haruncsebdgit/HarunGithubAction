name: CI/CD

on:
  push:
    branches: ['master', 'main']
  pull_request:
    branches: ['master', 'main']
  # Allow manual trigger
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  FILENAME: "deploy"

jobs:
  CI:
    name: üîç Run Tests & Build
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üß∞ Setup node env
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: npm

      - name: üì¶ Install dependencies
	    run: |
          npm install
          npm audit fix

      - name: ‚úÖ Run tests
        run: npm test

      - name: üõ†Ô∏è Build app
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact          
          path: ${{ env.FILENAME }}.tar.gz

  CD:
    name: üöÄ Deploy to AWS
    runs-on: ubuntu-latest
    needs: [CI]

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .

      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}  
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ${{ env.FILENAME }}.tar.gz
          target: "/tmp"

      - name: Execute Remote SSH Commands
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo tar -xzf /tmp/${{ env.FILENAME }}.tar.gz -C /var/www/mywebsite/
            sudo rm /tmp/${{ env.FILENAME }}.tar.gz
            sudo systemctl restart nginx




  

  
    